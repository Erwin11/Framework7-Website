extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = '下拉刷新 | Framework7 文档';

block content
  .docs-demo-device
    iframe(width="320", height="548", frameborder="0", scrolling="on")
    .fade-overlay
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content.with-device
      .full-width
        h1 下拉刷新
        h2 下拉刷新的HTML布局结构
        p 看一下如何让下拉刷新组件和页面融为一体:
        pre
          code
            | &lt;div class="page"&gt;
            |   &lt;!-- Page content should have additional "pull-to-refresh-content" class --&gt;
            |   &lt;div class="page-content pull-to-refresh-content"&gt;
            |     &lt;!-- Default pull to refresh layer--&gt;
            |     &lt;div class="pull-to-refresh-layer"&gt;
            |       &lt;div class="preloader"&gt;&lt;/div&gt;
            |       &lt;div class="pull-to-refresh-arrow"&gt;&lt;/div&gt;
            |     &lt;/div&gt;
            | 
            |     &lt;!-- usual content below --&gt;
            |     &lt;div class="list-block"&gt;
            |       ...
            |     &lt;/div&gt;
            |   &lt;/div&gt;
            | &lt;/div&gt;   
        p 其中
          ul
            li <code>page-content</code>需要额外添加<code>pull-to-refresh-content</code>的class。他会激活这块page拥有下拉刷新功能。
            li <code>pull-to-refresh-layer</code> 平时隐藏的布局块，包含下拉刷新的可视元素：转动小菊花和上/下箭头。
        h2 下拉刷新的行为顺序
        p 当用户下拉使 <b>pull-to-refresh-content</b> 元素超过下降超过44px时 (即<b>pull-to-refresh-layer</b>元素完全可视), 之后<b>pull-to-refresh-layer</b>元素将自动添加 "<b>pull-up</b>" class使箭头转向180度以告诉用户界面将在他释放手指时刷新。
        p 当用户在“pull-up”状态释放下拉区块使页面刷新时，<b>pull-to-refresh-layer</b>区块将会添加一个"<b>refreshing</b>" class.在“refreshing”状态，箭头icon会隐藏，同时会展现一个loading的转动小菊花指示器。这个时候你通常正在进行Ajax异步请求。
        h2 下拉刷新事件
        p 以下是下拉刷新的特殊事件，用以帮助我们识别须要刷新界面的时机:
        table.events-table
          thead
            tr
              th Event
              th Target
              th Description
          tbody
            tr
              td refresh
              td 拥有下拉刷新功能的界面<span>&lt;div class="pull-to-refresh-content"&gt;</span>
              td 事件会在下拉刷新进入“refreshing” 状态时触发
        h2 重置下拉刷新
        p 在我们下拉刷新页面之后，需要重置下拉刷新组件以使之可以继续进行下拉刷新操作:
        .method-wrap
          p
            span.method myApp.pullToRefreshDone(<span>ptrContent</span>) 
            span - 重置特定的下拉刷新界面
          ul.method-parameters
            li
              span.parameter ptrContent
              |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (需要完整CSS选择器) 须要重置的 "pull-to-refresh-content" 页面
        h2 JS触发下拉刷新
        p 我们也可以通过下面的方法手工触发下拉刷新:
        .method-wrap
          p
            span.method myApp.pullToRefreshTrigger(<span>ptrContent</span>) 
            span - 触发特定界面的下拉刷新
          ul.method-parameters
            li
              span.parameter ptrContent
              |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (需要完整CSS选择器) 须要触发下拉刷新的 "pull-to-refresh-content" 页面
      h2(data-device-preview="../docs-demos/pull-to-refresh.html") 例子
      pre
        code
          | &lt;div class="page-content pull-to-refresh-content"&gt;
          |   &lt;div class="pull-to-refresh-layer"&gt;
          |     &lt;div class="preloader"&gt;&lt;/div&gt;
          |     &lt;div class="pull-to-refresh-arrow"&gt;&lt;/div&gt;
          |   &lt;/div&gt;
          |   &lt;div class="list-block media-list"&gt;
          |     &lt;ul&gt;
          |       &lt;li class="item-content"&gt;
          |         &lt;div class="item-media"&gt;&lt;img src="http://hhhhold.com/88/d/jpg?1" width="44"&gt;&lt;/div&gt;
          |         &lt;div class="item-inner"&gt;
          |           &lt;div class="item-title-row"&gt;
          |             &lt;div class="item-title"&gt;Yellow Submarine&lt;/div&gt;
          |           &lt;/div&gt;
          |           &lt;div class="item-subtitle"&gt;Beatles&lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/li&gt;
          |       ...
          |     &lt;/ul&gt;
          |     &lt;div class="list-block-label"&gt;
          |       &lt;p&gt;Just pull page down to let the magic happen.&lt;/p&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          | &lt;/div&gt;          
      pre
        code
          | var myApp = new Framework7();
          | 
          | var $$ = Dom7;
          | 
          | // Dummy Content
          | var songs = ['Yellow Submarine', 'Don\'t Stop Me Now', 'Billie Jean', 'Californication'];
          | var authors = ['Beatles', 'Queen', 'Michael Jackson', 'Red Hot Chili Peppers'];
          | 
          | // Pull to refresh content
          | var ptrContent = $$('.pull-to-refresh-content');
          | 
          | // Add 'refresh' listener on it
          | ptrContent.on('refresh', function (e) {
          |     // Emulate 2s loading
          |     setTimeout(function () {
          |         // Random image
          |         var picURL = 'http://hhhhold.com/88/d/jpg?' + Math.round(Math.random() * 100);
          |         // Random song
          |         var song = songs[Math.floor(Math.random() * songs.length)];
          |         // Random author
          |         var author = authors[Math.floor(Math.random() * authors.length)];
          |         // List item html
          |         var itemHTML = '&lt;li class="item-content"&gt;' +
          |                           '&lt;div class="item-media"&gt;&lt;img src="' + picURL + '" width="44"/&gt;&lt;/div&gt;' +
          |                           '&lt;div class="item-inner"&gt;' +
          |                             '&lt;div class="item-title-row"&gt;' +
          |                               '&lt;div class="item-title"&gt;' + song + '&lt;/div&gt;' +
          |                             '&lt;/div&gt;' +
          |                             '&lt;div class="item-subtitle"&gt;' + author + '&lt;/div&gt;' +
          |                           '&lt;/div&gt;' +
          |                         '&lt;/li&gt;';
          |         // Prepend new list element
          |         ptrContent.find('ul').prepend(itemHTML);
          |         // When loading done, we need to reset it
          |         myApp.pullToRefreshDone();
          |     }, 2000);
          | });
