extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Dom7 - Custom DOM Library | Framework7 Documentation';

block content
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content
      h1 DOM7 - 自定义的DOM库
      p Framework7 不需要任何第三方的库，包括DOM操作。她有自己的 DOM7 - 一个集成了大部分常用DOM操作的高性能库。你不需要学习任何新的东西，因为她的用法和大名鼎鼎的jQuery几乎是一样的，包括大部分常用的方法和jquery风格的链式调用。
      p 现在有一个全局的Dom7对象，最好把DOM7存储到一个局部变量中，为了防止和其他库冲突，我们推荐使用 <strong>$$</strong> 来代替 $。
      pre
        code.
          //Export DOM7 to local variable to make it easy accessable
          var $$ = Dom7;
      h2 用法示例
      pre
        code
          | $$('.something').on('click', function (e) {
          |     $$(this).addClass('hello').attr('title', 'world').insertAfter('.something-else');
          | });
      h2 可用的方法
      p 下面这些方法几乎都和 jQuery/Zepto 是一样的：
      table.methods-table.dom7-table
        tbody
          tr
            th(colspan="2") Classes
          tr
            td .addClass(<span>className</span>) 
            td 给元素增加class
              pre
                code.js
                  | //Add "intro" class to all paragraphs
                  | $$('p').addClass('intro');
          tr
            td .removeClass(<span>className</span>) 
            td 删除指定的class
              pre
                code.js
                  | //Add "big" class from all links with "big" class
                  | $$('a.big').removeClass('big');
          tr
            td .hasClass(<span>className</span>) 
            td 元素上是否有指定的class:
              pre
                code.html
                  | &lt;p class="intro"&gt;Lorem ipsum...&lt;/p&gt;
              pre
                code.js
                  | $$('p').hasClass('intro'); //-> true
          tr
            td .toggleClass(<span>className</span>) 
            td 有则删除，无则添加:
              pre
                code.html
                  | &lt;!-- Before --&gt;
                  | &lt;h1 class="small"&gt;This is first title&lt;/h1&gt;
                  | &lt;h2&gt;This is subtitle&lt;/h2&gt;                
              pre
                code.js
                  | $$('h1, h2').toggleClass('small');
              pre
                code
                  | &lt;!-- After --&gt;
                  | &lt;h1&gt;This is first title&lt;/h1&gt;
                  | &lt;h2 class="small"&gt;This is subtitle&lt;/h2&gt;                
          tr
            th(colspan="2") 属性
          tr
            td .prop(<span>propName</span>) 
            td 获取一个属性值:
              pre
                code
                  | var isChecked = $$('input').prop('checked');
          tr
            td .prop(<span>propName</span>, <span>propValue</span>) 
            td 设置一个属性值:
              pre
                code
                  | //Make all checkboxes checked
                  | $$('input[type="checkbox"]').prop('checked', true);
          tr
            td .prop(<span>propertiesObject</span>) 
            td 设置多个属性值:
              pre
                code.js
                  | $$('input').prop({
                  |   checked: false,
                  |   disabled: true
                  | })                
          tr
            td .attr(<span>attrName</span>) 
            td 获取一个属性值:
              pre
                code
                  | &lt;a href="http://google.com"&gt;Google&lt;/a&gt;
              pre
                code.js
                  | var link = $$('a').attr('href'); //-&gt; http://google.com
          tr
            td .attr(<span>attrName</span>, <span>attrValue</span>) 
            td 设置一个属性值:
              pre
                code
                  | //Set all links to google
                  | $$('a').attr('href', 'http://google.com');
          tr
            td .attr(<span>attributesObject</span>) 
            td 设置多个属性值:
              pre
                code.js
                  | $$('a').attr({
                  |   id: 'new-id',
                  |   title: 'Link to Google',
                  |   href: 'http://google.com'
                  | }) 
          tr
            td .removeAttr(<span>attrName</span>) 
            td 删除属性值:
              pre
                code.js
                  | //Remove "src" attribute from all images
                  | $$('img').removeAttr('src');
          tr
            td .val() 
            td 获取选中的元素中的第一个元素的当前值
              pre
                code.html
                  | &lt;input id="myInput" type="text" value="Lorem ipsum"/&gt;
              pre
                code.js
                  | var inputVal = $$('#myInput').val(); //-> 'Lorem ipsum'
          tr
            td .val(<span>newValue</span>) 
            td 给选中的元素的每一个都设置指定的值
              pre
                code
                  | $$('input#myInput').val('New value here');
          tr
            th(colspan="2") 数据存储
          tr
            td .data(<span>key</span>, <span>value</span>) 
            td 在选中的元素上存储任意数据
              pre
                code.js
                  | $$('a').data('user', {
                  |     id: '123',
                  |     name: 'John',
                  |     email: 'john@doe.com'
                  | });  
          tr
            td .data(<span>key</span>) 
            td 如果只有一个参数，则读取指定的值，如果有两个参数 <code>data(key, value)</code> 则是设置值，也可以通过 HTML5 <code>data-*</code> 属性来设置。
              pre
                code.js
                  | var user = $$('a').data('user'); 
                  | //-> {id: '123', name: 'John', email: 'john@doe.com'}
              p or
              pre
                code.html
                  | &lt;p data-id="123"&gt;Lorem ipsum...&lt;/p&gt;
              pre
                code.js
                  | var id = $$('p').data('id'); //-> 123
          tr
            th(colspan="2") CSS 动画 - transform 和 transition
          tr
            td .transform(<span>CSSTransformString</span>) 
            td 添加带前缀的transform 样式: 
              pre <code class="js">$$('a').transform('rotate(90deg)')</code>
          tr
            td .transition(<span>transitionDuration</span>) 
            td 设置css transition-duration 属性
              pre <code class="js">$$('p').transition(300)</code>
          tr
            th(colspan="2") 事件
          tr
            td .on(<span>eventName</span>, <span>handler</span>, <span>useCapture</span>) 
            td 在选中的元素上绑定事件
              pre
                code.js
                  | $$('a').on('click', function (e) { 
                  |   console.log('clicked'); 
                  | });
              pre
                code.js
                  | $$('input[type="text"]').on('keyup keydown change', function (e) { 
                  |   console.log('input value changed'); 
                  | });
          tr
            td .on(<span>eventName</span>, <span>delegatedTarget</span>, <span>handler</span>, <span>useCapture</span>) 
            td 通过代理绑定事件
              pre
                code.js
                  | $$(document).on('click', 'a', function (e) { 
                  |   console.log('link clicked'); 
                  | });
          tr
            td .off(<span>eventName</span>, <span>handler</span>, <span>useCapture</span>) 
            td 删除事件绑定
              pre
                code.js
                  | function clickHandler(){
                  |     console.log('clicked');
                  | }
                  | // Add event listener
                  | $('a').on('click', clickHandler);
                  | // Remove event listener
                  | $('a').off('click', clickHandler);                  
              
          tr
            td .off(<span>eventName</span>, <span>delegatedTarget</span>, <span>handler</span>, <span>useCapture</span>) 
            td 删除通过代理绑定的事件
              pre
                code.js
                  | function clickHandler(){
                  |     console.log('clicked');
                  | }
                  | // Add event listener
                  | $(document).on('click', 'a', clickHandler);
                  | // Remove event listener
                  | $(document).off('click', 'a', clickHandler);
          tr
            td .trigger(<span>eventName</span>, <span>eventData</span>) 
            td 触发选中元素上的事件，指定所有的事件回调函数
            pre
              code.js
                | $$(window).trigger('resize');
          tr
            td .transitionEnd(<span>callback</span>, <span>permanent</span>) 
            td 在选中的元素上增加 transitionEnd 事件回调
              pre
                code.js
                  $$('a').transitionEnd(function(){ /* do something */ })
          tr
            td .animationEnd(<span>callback</span>) 
            td 在选中的元素上增加 animationEnd 事件回调
              pre
                code.js
                  $$('a').animationEnd(function(){ /* do something */ })
          tr
            th(colspan="2") Styles
          tr
            td .width() 
            td 获取当前选中元素中的第一个元素的当前计算出来的宽度
              pre
                code.js var boxWidth = $$('div#box').width();
          tr
            td .outerWidth(<span>[includeMargin]</span>) 
            td 获取当前选中元素中的第一个元素的当前计算出来的宽度，包括 padding ，border 和 margin(如果 includeMargin 设置为 <b>true</b>)
              pre
                code.js var outerWidth = $$('div#box').outerWidth(true);
          tr
            td .height() 
            td 获取当前选中玄素中的第一个元素的当前计算出来的高度
              pre
                code.js var boxHeight = $$('div#box').height();
          tr
            td .outerHeight(<span>[includeMargin]</span>)
            td 获取当前选中元素中的第一个元素的当前计算出来的高度，包括 padding ，border 和 margin(如果 includeMargin 设置为 <b>true</b>)
              pre
                code.js var outerHeight = $$('div#box').outerHeight(true);
          tr
            td .offset() 
            td 获取当前选中元素的第一个元素相对 document 的位置偏移
              pre
                code.js
                  | var coords = $$('.content').offset(); //-> {top: 100, left: 200}
                  | var top = coords.top; //-> 100
                  | var left = coords.left; //-> 200
          tr
            td .hide() 
            td 对选中的元素设置 "display: none"
              pre
                code.js
                  | //hide all paragraphs
                  | $$('p').hide();
          tr
            td .show() 
            td 对选中的元素设置 "display: block"
              pre
                code.js
                  | //show all paragraphs
                  | $$('p').show();
          tr
            td .css(<span>property</span>) 
            td 获取选中元素中第一个元素的CSS属性值
              pre
                code
                  | $$('.content').css('left'); //-> 200px
          tr
            td .css(<span>property</span>, <span>value</span>) 
            td 设置全部选中元素中的CSS属性值
              pre
                code
                  | $$('.content').css('left', '100px');
          tr
            td .css(<span>propertiesObject</span>) 
            td 设置全部选中元素中的多个CSS属性值
              pre
                code
                  | $('a').css({
                  |     left: '100px',
                  |     top: '200px',
                  |     color: 'red',
                  |     width: '300px',
                  |     marginLeft: '17px',
                  |     'padding-right': '20px'
                  | });
          tr
            th(colspan="2") Scroll
          tr
            td .scrollTop() 
            td 获取选中元素的 scrollTop 值
          tr
            td .scrollTop(position, duration) 
            td 在指定时间（duration）内滚动到指定位置（position）。如果时间（duration没有定义），则立刻滚动到指定位置。
          tr
            td .scrollLeft() 
            td 获取选中元素的 scrollLeft 值 
          tr
            td .scrollLeft(position, duration) 
            td 在指定的时间（duration 毫秒)内滚动到指定的位置(scrollLeft)。如果没有指定时间则立刻滚动到指定位置。
          tr
            td .scrollTo(left, top, duration) 
            td 在指定的时间（duration 毫秒)内滚动到指定的位置(scrollLeft, scrollTop)。如果没有指定时间则立刻滚动到指定位置。
          tr
            th(colspan="2") Dom 操作
          tr
            td .each(<span>callback</span>) 
            td 遍历集合，对其中每一个元素执行回调。
          tr
            td .html() 
            td 获得选中的第一个元素的HTML内容
          tr
            td .html(<span>newInnerHTML</span>) 
            td 给全部选中元素设置HTML内容
          tr
            td .text() 
            td 获得选中的第一个元素的文本内容
          tr
            td .text(<span>newTextContent</span>) 
            td 给全部选中元素设置文本内容
          tr
            td .is(<span>CSSSelector</span>) 
            td 选中的元素是否符合指定的CSS选择器
          tr
            td .is(<span>HTMLElement</span>) 
            td 选中的元素是否是给定的 DOM 元素或者 Dom7 集合
          tr
            td .index() 
            td 当前选中的第一个元素在他的所有兄弟节点中的排序
          tr
            td .eq(<span>index</span>) 
            td 返回当前选中的元素中的指定序号的元素
          tr
            td .append(<span>HTMLString</span>) 
            td 在当前选中元素的每一个后面插入指定内容
          tr
            td .append(<span>HTMLElement</span>) 
            td 在当前选中元素的每一个后面插入指定元素
          tr
            td .prepend(<span>newHTML</span>) 
            td 在当前选中元素的每一个前面插入指定内容
          tr
            td .prepend(<span>HTMLElement</span>) 
            td 在当前选中元素的每一个前面插入指定元素
          tr
            td .insertBefore(<span>target</span>) 
            td 把当前选中的每一个元素插入到指定的目标之前。目标（target）应该是一个 CSS 选择器或者 HTML 元素 或者 Dom7集合
          tr
            td .insertAfter(<span>target</span>) 
            td 把当前选中的每一个元素插入到指定的目标之后。目标（target）应该是一个 CSS 选择器或者 HTML 元素 或者 Dom7集合
          tr
            td .next(<span>[selector]</span>) 
            td 获得当前选中的每一个元素的下一个直接兄弟元素。如果提供了一个选择器（selector），那么会用这个选择器来过滤这些兄弟元素。
          tr
            td .nextAll(<span>[selector]</span>) 
            td 获得当前选中的每一个元素之后的全部兄弟元素。如果提供了一个选择器（selector），那么会用这个选择器来过滤这些兄弟元素。
          tr
            td .prev(<span>[selector]</span>) 
            td 获得当前选中的每一个元素的上一个直接兄弟元素。如果提供了一个选择器（selector），那么会用这个选择器来过滤这些兄弟元素。
          tr
            td .prevAll(<span>[selector]</span>) 
            td 获得当前选中的每一个元素之前的全部兄弟元素。如果提供了一个选择器（selector），那么会用这个选择器来过滤这些兄弟元素。
          tr
            td .parent(<span>[selector]</span>) 
            td 获取选中的每一个元素的父元素。如果提供了一个选择器（selector），那么会用这个选择器来过滤这些父元素。
          tr
            td .parents(<span>[selector]</span>) 
            td 获取选中的每一个元素的祖先元素。如果提供了一个选择器（selector），那么会用这个选择器来过滤这些祖先元素。
          tr
            td .find(<span>selector</span>) 
            td 在选中的每一个元素的后代中查找指定的元素。
          tr
            td .children(<span>selector</span>) 
            td 在选中的每一个元素的直接孩子中查找指定的元素。
          tr
            td .remove() 
            td 从DOM中删除选中的元素
          
          tr
            th(colspan="2") 快捷方式
          tr
            td .click()
            td Trigger "click" event on collection
          tr
            td .click(<span>handler</span>) 
            td Add "click" event handler to collection
          tr
            td .blur()
            td Trigger "blur" event on collection
          tr
            td .blur(<span>handler</span>) 
            td Add "blur" event handler to collection
          tr
            td .focus()
            td Trigger "focus" event on collection
          tr
            td .focus(<span>handler</span>) 
            td Add "focus" event handler to collection
          tr
            td .focusin()
            td Trigger "focusin" event on collection
          tr
            td .focusin(<span>handler</span>) 
            td Add "focusin" event handler to collection
          tr 
            td .focusout()
            td Trigger "focusout" event on collection
          tr 
            td .focusout(<span>handler</span>) 
            td Add "focusout" event handler to collection

          tr 
            td .keyup()
            td Trigger "keyup" event on collection
          tr 
            td .keyup(<span>handler</span>) 
            td Add "keyup" event handler to collection

          tr
            td .keydown()
            td Trigger "keydown" event on collection
          tr
            td .keydown(<span>handler</span>) 
            td Add "keydown" event handler to collection
          tr
            td .keypress()
            td Trigger "keypress" event on collection
          tr
            td .keypress(<span>handler</span>) 
            td Add "keypress" event handler to collection

          tr
            td .submit()
            td Trigger "submit" event on collection
          tr
            td .submit(<span>handler</span>) 
            td Add "submit" event handler to collection
          tr
            td .change()
            td Trigger "change" event on collection
          tr
            td .change(<span>handler</span>) 
            td Add "change" event handler to collection

          tr
            td .mousedown()
            td Trigger "mousedown" event on collection
          tr
            td .mousedown(<span>handler</span>) 
            td Add "mousedown" event handler to collection

          tr
            td .mousemove()
            td Trigger "mousemove" event on collection
          tr
            td .mousemove(<span>handler</span>) 
            td Add "mousemove" event handler to collection

          tr
            td .mouseup()
            td Trigger "mouseup" event on collection
          tr
            td .mouseup(<span>handler</span>) 
            td Add "mouseup" event handler to collection

          tr
            td .mouseenter()
            td Trigger "mouseenter" event on collection
          tr
            td .mouseenter(<span>handler</span>) 
            td Add "mouseenter" event handler to collection

          tr
            td .mouseleave()
            td Trigger "mouseleave" event on collection
          tr
            td .mouseleave(<span>handler</span>) 
            td Add "mouseleave" event handler to collection

          tr
            td .mouseout()
            td Trigger "mouseout" event on collection
          tr
            td .mouseout(<span>handler</span>) 
            td Add "mouseout" event handler to collection

          tr
            td .mouseover()
            td Trigger "mouseover" event on collection
          tr
            td .mouseover(<span>handler</span>) 
            td Add "mouseover" event handler to collection

          tr
            td .touchstart()
            td Trigger "touchstart" event on collection
          tr
            td .touchstart(<span>handler</span>) 
            td Add "touchstart" event handler to collection

          tr
            td .touchend()
            td Trigger "touchend" event on collection
          tr
            td .touchend(<span>handler</span>) 
            td Add "touchend" event handler to collection

          tr
            td .touchmove()
            td Trigger "touchmove" event on collection
          tr
            td .touchmove(<span>handler</span>) 
            td Add "touchmove" event handler to collection

          tr
            td .resize(<span>handler</span>) 
            td Add "resize" event handler to collection

          tr
            td .scroll(<span>handler</span>) 
            td Add "scroll" event handler to collection
