extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Action Sheet | Framework7 Documentation';

block content
  .docs-demo-device
    iframe(width="320", height="548", frameborder="0", scrolling="on")
    .fade-overlay
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content.with-device
      .full-width
        h1 操作表
        p 操作表是一个上滑面板，用来向用户展示进行一个任务所需的选项。
        p 你也可以使用它来提示用户，确认潜在的危险操作。
        p 操作表包含一个可选的标题和至少一个按钮，每个按钮都对应一个操作。
        .important-note
          p 注意，不建议在大屏幕（iPad）上使用操作表。在大屏幕上，你应该使用<a href="popover.html">弹出框</a>。
        h2 创建并弹出操作表
        p 操作表是动态元素，只能使用Javascript来创建并弹出它。让我们看一下创建操作表相关的App方法：
        p
          span.method myApp.actions(<span>groups</span>)</span> - 创建并弹出操作表，其包含指定数量群组的按钮
          br
          | 或者 
          br
          span.method myApp.actions(<span>buttons</span>)</span> - 创建并弹出操作表，其包含一个群组，群组包含指定数量的按钮

        ul.method-parameters
          li
            span.parameter groups
            |  - <span class="parameter-type">array</span>. 一组群组，每个群组包含若干按钮
          li
            span.parameter buttons
            |  - <span class="parameter-type">array</span>. 一组按钮，这种情况下，只有一个群组
          li.method-returns 这个方法返回动态创建的操作表HTML元素

        p 每个在<em>buttons</em>中的按钮应该作为一个对象，其包含如下参数：
        table.params-table
          thead
            tr
              th 参数
              th 类型
              th 默认值
              th 描述
          tbody
            tr
              td text
              td string
              td 
              td 按钮上的文本（可以是HTML字符串）
            tr
              td bold
              td boolean
              td false
              td 可选，若为真，则按钮上文本加粗
            tr
              td color
              td string
              td 
              td 可选，按钮颜色，待选颜色有10种
            tr
              td label
              td boolean
              td true
              td 可选，若为真，它会成为标题，而不是按钮
            tr
              td onClick
              td function
              td 
              td 可选，当用户点击该按钮时，会调用这个函数
        p 让我们来看一下例子

      pre(data-device-preview="../docs-demos/action-sheet.html")
        code 
          | &lt;body&gt;
          |   ...
          |   &lt;div class="page-content"&gt;
          |     &lt;div class="content-block"&gt;
          |       &lt;p&gt;&lt;a href="#" class="ac-1"&gt;One group, three buttons&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="ac-2"&gt;One group, title, three buttons&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="ac-3"&gt;Two groups&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="ac-4"&gt;Three groups&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="ac-5"&gt;With callbacks on click&lt;/a&gt;&lt;/p&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;
      pre
        code
          | var myApp = new Framework7();
          |  
          | var $$ = Dom7;
          | 
          | //- One group, three buttons
          | $$('.ac-1').on('click', function () {
          |     var buttons = [
          |         {
          |             text: 'Button1',
          |             bold: true
          |         },
          |         {
          |             text: 'Button2'
          |         },
          |         {
          |             text: 'Cancel',
          |             color: 'red'
          |         },
          |     ];
          |     myApp.actions(buttons);
          | });
          | 
          | //- One group, title, three buttons
          | $$('.ac-2').on('click', function () {
          |     var buttons = [
          |         {
          |             text: 'Do something',
          |             label: true
          |         },
          |         {
          |             text: 'Button1',
          |             bold: true
          |         },
          |         {
          |             text: 'Button2',
          |         },
          |         {
          |             text: 'Cancel',
          |             color: 'red'
          |         },
          |     ];
          |     myApp.actions(buttons);
          | });
          | 
          | //- Two groups
          | $$('.ac-3').on('click', function () {
          |     var buttons1 = [
          |         {
          |             text: 'Do something',
          |             label: true
          |         },
          |         {
          |             text: 'Button1',
          |             bold: true
          |         },
          |         {
          |             text: 'Button2',
          |         }
          |     ];
          |     var buttons2 = [
          |         {
          |             text: 'Cancel',
          |             color: 'red'
          |         }
          |     ];
          |     var groups = [buttons1, buttons2];
          |     myApp.actions(groups);
          | });
          | 
          | //- Three groups
          | $$('.ac-4').on('click', function () {
          |     var buttons1 = [
          |         {
          |             text: 'Share',
          |             label: true
          |         },
          |         {
          |             text: 'Mail',
          |         },
          |         {
          |             text: 'Messages',
          |         }
          |     ];
          |     var buttons2 = [
          |         {
          |             text: 'Social share',
          |             label: true
          |         },
          |         {
          |             text: 'Facebook',
          |         },
          |         {
          |             text: 'Twitter',
          |         }
          |     ];
          |     var buttons3 = [
          |         {
          |             text: 'Cancel',
          |             color: 'red'
          |         }
          |     ];
          |     var groups = [buttons1, buttons2, buttons3];
          |     myApp.actions(groups);
          | });
          | 
          | //- With callbacks on click
          | $$('.ac-5').on('click', function () {
          |     var buttons = [
          |         {
          |             text: 'Button1',
          |             onClick: function () {
          |                 myApp.alert('Button1 clicked');
          |             }
          |         },
          |         {
          |             text: 'Button2',
          |             onClick: function () {
          |                 myApp.alert('Button2 clicked');
          |             }
          |         },
          |         {
          |             text: 'Cancel',
          |             color: 'red',
          |             onClick: function () {
          |                 myApp.alert('Cancel clicked');
          |             }
          |         },
          |     ];
          |     myApp.actions(buttons);
          | });   
      .full-width.stop-scroll-device 
        h2 关闭操作表
        p 默认情况下，操作表会在以下情况下自动关闭：
        ul
          li 点击任意一个按钮
          li 点击窗口之外的遮罩（可以通过<code>modalActionsCloseByOutside</code>这个应用初始化参数配置）
        p 也可以使用适当的App方法来手动关闭操作表：
        p
          span.method myApp.closeModal(<span>actionSheet</span>)</span> - 关闭弹出窗口
        ul.method-parameters
          li
            span.parameter actionSheet
            |  - 表示要关闭的操作表的<span class="parameter-type">HTML元素</span>或者（包含CSS选择器的）<span class="parameter-type">字符串</span>。可选，如果没有指定，任何打开的操作表都会被关闭

        h2 操作表事件
        p 操作表和任意<a href="modal.html">模态框</a>拥有相同的事件
        table.events-table
          thead
            tr
              th 事件
              th 目标
              th 描述
          tbody
            tr
              td open
              td 操作表元素<span>&lt;div class="actions-modal"&gt;</span>
              td 当操作表开始弹出动画的时候，事件触发
            tr
              td opened
              td 操作表元素<span>&lt;div class="actions-modal"&gt;</span>
              td 当操作表完成弹出动画的时候，事件触发
            tr
              td close
              td 操作表元素<span>&lt;div class="actions-modal"&gt;</span>
              td 当操作表开始结束动画的时候，事件触发
            tr
              td closed
              td 操作表元素<span>&lt;div class="actions-modal"&gt;</span>
              td 当操作表完成结束动画的时候，事件触发    


          