extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Device API | Framework7 Documentation';

block content
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content
      h1 Device API
      p Framework7拥有设备检测库。在你<a href="init-app.html">初始化应用</a>之后，你可以访问<code>myApp.device</code>这个对象，它包含了关于设备和平台的有用信息：
      table.methods-table
        tr
          td myApp.device.os
          td <em>string</em>. 包含<strong>"android"</strong> (对于Android), <strong>"ios"</strong> (对于iOS), <strong>undefined</strong> (对于任意其他操作系统/平台)
        tr
          td myApp.device.osVersion
          td <em>string</em>. 包含操作系统版本号，只在Android和iOS设备上可用。例如，如果是iOS设备，且其版本为7.1，则会显示“7.1”
        tr
          td myApp.device.android
          td <em>boolean</em>. 对于Android设备，为<strong>true</strong>，对于其他设备，为false
        tr
          td myApp.device.ios
          td <em>boolean</em>. 对于iOS设备，为<strong>true</strong>，对于其他设备，为false
        tr
          td myApp.device.ipad
          td <em>boolean</em>. 对于iPad，为<strong>true</strong>，对于其他设备，为false
        tr
          td myApp.device.iphone
          td <em>boolean</em>. 对于iPhone/iPod Touch，为<strong>true</strong>，对于其他设备，为false
        tr
          td myApp.device.pixelRatio
          td <em>number</em>. 返回设备屏幕像素比，实际上，它就是<code>window.devicePixelRatio</code>的快捷方式
        tr
          td myApp.device.webView
          td <em>boolean</em>. 如果应用在UIWebView（安装在家用电脑或phone gap上的网络应用）中运行，为<strong>true</strong>
        tr
          td myApp.device.minimalUi
          td <em>boolean</em>. 如果启用了minimal-ui模式，为<strong>true</strong>。所谓minimal-ui模式，即为：当网络应用运行在iOS 7.1+的iPhone/iPod上，并且添加了minimal-ui viewport这个meta标签
        tr
          td myApp.device.statusBar
          td <em>boolean</em>. 如果应用运行在<a href="status-bar.html">全屏模式</a>，并且需要<a href="status-bar.html">状态栏遮罩</a>，为true。<strong>只针对iOS</strong>
      h2 额外的&lt;html&gt;类
      p 这个设备检测库也在<code>&lt;html&gt;</code>元素上加入了额外的类，以在不同的操作系统和平台上，具有不同的CSS样式。
      p 所以，如果你用iOS 7.1的设备打开应用，你会拥有以下类：
      pre
        code
          | &lt;html class="ios ios-7 ios-7-1 ios-gt-6 pixel-ratio-1"&gt;
          | ...
      p 如果你用具有retina屏的iOS 7.1设备来打开应用，并且运行在全屏模式下（myApp.device.statusBar = true）：
      pre
        code
          | &lt;html class="ios ios-7 ios-7-1 ios-gt-6 retina pixel-ratio-2 with-statusbar-overlay"&gt;
          | ...
      p 如果你用iOS 8.0设备来打开应用，并且运行在全屏模式下（myApp.device.statusBar = true）：
      pre
        code
          | &lt;html class="ios ios-8 ios-8-0 ios-gt-6 ios-gt-7 with-statusbar-overlay"&gt;
          | ...
      p If you open app on iPhone6 Plus and your app running in full screen mode (myApp.device.statusBar = true):
      pre
        code
          | &lt;html class="ios ios-8 ios-8-0 ios-gt-6 ios-gt-7 retina pixel-ratio-3 with-statusbar-overlay"&gt;
          | ...
      p 如果你用Android 4.4设备来打开应用，你会拥有以下类：
      pre
        code
          | &lt;html class="android android-4 android-4-4"&gt;
          | ...
      p 换句话说，类基于以下规则计算：
      pre
        code
          | &lt;html class="[os] [os major version] [os full version] [retina] pixel-ratio-[devicePixelRatio] [with-statusbar-overlay]"&gt;
          | ...
      .important-note
        p 注意，“greater than”（ios-gt-6: 对于所有高于iOS 6的iOS）类只对iOS有效
      h2 未经初始化或在初始化之前访问Device对象
      p 也可以通过原型来访问Device对象的参数：
      pre
        code
          | var device = Framework7.prototype.device;
          | if (device.iphone) {
          |   console.log('this is iPhone')
          | }
      

        
        
        

        
